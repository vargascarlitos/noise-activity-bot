name: Noise Bot

on:
  schedule:
    - cron: "0 * * * *"   # ejecuta cada hora exacta (UTC)
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

concurrency:
  group: noise-bot
  cancel-in-progress: false

jobs:
  run-noise:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout con tu token (PAT)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTIONS_PAT }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # ðŸŽ² Jitter y gate probabilÃ­stico
      - name: Jitter y gate probabilÃ­stico
        env:
          BASE_DAY_INTENSITY: "0.7"   # nivel promedio diario
          WEEKEND_FACTOR: "0.25"      # baja en sÃ¡b/dom
          MORNING_BOOST: "1.2"        # boost 9â€“12 PY
          AFTERNOON_BOOST: "1.1"      # boost 13â€“17 PY
          EVENING_DROP: "0.6"         # baja 18â€“21 PY
          NIGHT_DROP: "0.2"           # casi nada 22â€“08 PY
        run: |
          JITTER=$((RANDOM % 60))
          echo "Esperando $JITTER min..."
          sleep $((JITTER * 60))

          DATE_PY=$(TZ=America/Asuncion date +%F)
          HOUR_PY=$(TZ=America/Asuncion date +%H)
          DOW_PY=$(TZ=America/Asuncion date +%u)

          SEED=$(echo -n "$DATE_PY" | cksum | awk '{print $1 % 1000}')
          BASE=${BASE_DAY_INTENSITY:-0.7}
          DAY_FACTOR=$(python3 -c "import random, sys; seed=int(sys.argv[1]); base=float(sys.argv[2]); random.seed(seed); print(round(base * (0.8 + random.random()*0.8), 3))" $SEED $BASE)

          if [ "$DOW_PY" -ge 6 ]; then WD_FACTOR=${WEEKEND_FACTOR:-0.25}; else WD_FACTOR=1.0; fi

          if   [ "$HOUR_PY" -ge 9 ] && [ "$HOUR_PY" -le 12 ]; then HOUR_FACTOR=${MORNING_BOOST:-1.2}
          elif [ "$HOUR_PY" -ge 13 ] && [ "$HOUR_PY" -le 17 ]; then HOUR_FACTOR=${AFTERNOON_BOOST:-1.1}
          elif [ "$HOUR_PY" -ge 18 ] && [ "$HOUR_PY" -le 21 ]; then HOUR_FACTOR=${EVENING_DROP:-0.6}
          else HOUR_FACTOR=${NIGHT_DROP:-0.2}; fi

          PCT=$(python3 -c "import sys; day=float(sys.argv[1]); wd=float(sys.argv[2]); hr=float(sys.argv[3]); p=min(95, max(0, int(100*day*wd*hr))); print(p)" $DAY_FACTOR $WD_FACTOR $HOUR_FACTOR)

          DRAW=$((RANDOM % 100))
          echo "Prob=$PCT% Sorteo=$DRAW"
          if [ "$DRAW" -ge "$PCT" ]; then
            echo "Gate: omito ejecuciÃ³n."
            exit 0
          fi

      - name: Ejecutar bot con aleatoriedad
        env:
          GITHUB_TOKEN:   ${{ secrets.ACTIONS_PAT }}
          GIT_USER_NAME:  "TuUsuario"
          GIT_USER_EMAIL: "TuUsuario@users.noreply.github.com"

          DO_ISSUE_PROB: "60"   # 60% chances de crear/cerrar issue
          DO_PR_PROB:    "50"   # 50% chances de crear PR+merge
        run: |
          node scripts/noise.js